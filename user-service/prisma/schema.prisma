// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id Int @id @default(autoincrement())
  username String?
  email String @unique
  number String?
  password String?
  role String? @default("utilisateur")
  status Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model admin {
  id Int @id @default(autoincrement())
  adminname String?
  email String? @unique
  password String?
  role String? @default("administrateur")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id          Int       @id @default(autoincrement())
  nom         String?  
  description String?  
  lieu        String?
  dateDebut   String?
  dateFin     String?
  status      Boolean   @default(true)
  type Type @relation(fields: [typeId] , references: [id])
  typeEvent    String?
  typeId      Int
  eventCategorie EventCategorie[]
  tarifEvent TarifEvent[]
  programme Programme[]
  adresse Adresse[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt 
}

model Type {
  id          Int       @id @default(autoincrement())
  typeEvent   String? 
  description String?
  status      Boolean   @default(true)
  event  Event[]
  createdAt   DateTime  @default(now()) 
  updatedAt   DateTime  @updatedAt    
}

model Categorie {
  id Int  @id @default(autoincrement())
  nom String?
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  evenCategorie EventCategorie[]
  sousCategorie sousCategorie[]
}

model sousCategorie {
  id Int  @id @default(autoincrement())
  nom String?
  description String?
  categorieEvent String?
  categorie Categorie @relation(fields: [categorieId] , references: [id])
  categorieId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EventCategorie {
  id Int @id @default(autoincrement())
  event Event @relation(fields: [eventId] , references: [id])
  eventId Int 
  categorie Categorie @relation(fields: [categorieId] , references: [id])
  categorieId Int
}

model TarifEvent {
  id Int @id @default(autoincrement())
  typeTarif String?
  prix Int
  event String?
  evenement Event @relation(fields: [eventId] , references: [id])
  eventId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ticket {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Programme {
  id Int @id @default(autoincrement())
  programme String?
  evenement String?
  event Event @relation(fields: [eventId] , references: [id])
  eventId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Adresse {
  id Int @id @default(autoincrement())
  adresse String?
  longitude Int
  largitude Int
  evenement String?
  event Event @relation(fields: [eventId] , references: [id])
  eventId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}